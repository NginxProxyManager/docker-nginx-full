ARG ACMESH_IMAGE=nginxproxymanager/nginx-full:acmesh
FROM golang:latest AS go
FROM $ACMESH_IMAGE AS final
ARG ACMESH_IMAGE
ARG TARGETPLATFORM

LABEL maintainer="Jamie Curnow <jc@jc21.com>"

RUN echo "Golang: $ACMESH_IMAGE, ${TARGETPLATFORM:-linux/amd64}" >> /built-for-arch

RUN apt-get update \
	&& apt-get install -y wget gcc g++ make git sqlite3 jq \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

# copy go from golang
COPY --from=go /usr/local/go /usr/local/go

ENV GOPATH=/opt/go \
	PATH="/usr/local/go/bin:$PATH:/opt/go/bin" \
	ACMESH_CONFIG_HOME=/data/.acme.sh/config \
	ACMESH_HOME=/data/.acme.sh \
	CERT_HOME=/data/.acme.sh/certs \
	LE_CONFIG_HOME=/data/.acme.sh/config \
	LE_WORKING_DIR=/data/.acme.sh

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" \
	&& chmod -R 777 "$GOPATH" \
	&& echo "====> ${TARGETPLATFORM}: $(go version)"

WORKDIR /root

COPY ./files/.bashrc.acmesh-golang /root/.bashrc

# Gotools
RUN cd /usr && wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.56.2
RUN go install github.com/kyoh86/richgo@latest \
	&& go install github.com/mfridman/tparse@latest \
	&& go install golang.org/x/vuln/cmd/govulncheck@latest \
	&& rm -rf /root/.cache/go-build

LABEL org.label-schema.cmd="docker run --rm -ti nginxproxymanager/nginx-full:acmesh-golang"

